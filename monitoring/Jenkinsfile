pipeline {
    agent any

    environment {
        AWS_REGION = credentials('AWS_REGION')  // Jenkins Credentials에서 가져오기
        AWS_ACCOUNT_ID = credentials('AWS_ACCOUNT_ID')
        PRIVATE_MONITORING_ID = credentials('PRIVATE_MONITORING_ID')  // 프라이빗 EC2 ID
    }

    stages {
        stage('Checkout Repository') {
            steps {
                script {
                    checkout scm
                }
            }
        }

        stage('Login to ECR') {
            steps {
                script {
                    sh """
                    aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com
                    """
                }
            }
        }

        stage('Deploy') {
            steps {
                script {
                    sh """
                    aws ssm send-command --document-name "AWS-RunShellScript" \\
                        --targets Key=instanceIds,Values="${PRIVATE_MONITORING_ID}" \\
                        --parameters 'commands=[
                            "echo \\"✅ 배포 시작: 기존 컨테이너 정리 및 최신 이미지 가져오기\\"",

                            "cd /home/ubuntu || exit 1",

                            "echo \\"✅ AWS CLI 버전 확인...\\"",
                            "aws --version",

                            "if [ -d \\"Cloud-repo\\" ]; then",
                            "   echo \\"✅ Cloud-repo 폴더가 존재합니다. Git Pull 수행 중...\\"",
                            "   cd Cloud-repo && git pull origin dev",
                            "else",
                            "   echo \\"❗ Cloud-repo 폴더가 없습니다. Git Clone 수행 중...\\"",
                            "   git clone https://github.com/profect-Oops/Cloud-repo.git && cd Cloud-repo && git checkout dev",
                            "fi",

                            "echo \\"✅ ECR 로그인 중...\\"",
                            "aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com",

                            "echo \\"✅ 최신 이미지 Pull...\\"",
                            "docker-compose pull",

                            "echo \\"✅ 실행 중인 컨테이너 확인 및 재시작...\\"",
                            "if [ \$(docker ps -q | wc -l) -gt 0 ]; then",
                            "   echo \\"✅ 실행 중인 컨테이너가 있습니다. 재시작 중...\\"",
                            "   docker ps -q | xargs -r docker restart",
                            "else",
                            "   echo \\"✅ 실행 중인 컨테이너가 없습니다. 새로 실행합니다.\\"",
                            "   docker-compose up -d --remove-orphans",
                            "fi",

                            "echo \\"✅ 컨테이너 실행 상태 확인...\\"",
                            "docker ps -a",

                            "echo \\"✅ 컨테이너 헬스 체크...\\"",
                            "sleep 5",
                            "docker inspect --format='{{.State.Running}}' my-app"
                        ]' \\
                        --region "${AWS_REGION}"
                    """
                }
            }
        }
    }
}