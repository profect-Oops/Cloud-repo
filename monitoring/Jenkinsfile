pipeline {
    agent any

    environment {
        AWS_REGION = credentials('AWS_REGION')  
        ECR_REPO = credentials('ECR_REPO')  
    }

    stages {
        stage('Checkout Repository') {
            steps {
                script {
                    checkout scm
                }
            }
        }

        stage('Get AWS Account ID') {
            steps {
                script {
                    env.AWS_ACCOUNT_ID = sh(script: "aws sts get-caller-identity --query Account --output text", returnStdout: true).trim()
                }
            }
        }

        stage('Login to ECR') {   
            steps {
                script {
                    sh "aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${env.AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com"
                }
            }
        }

        stage('Check & Pull only if new version exists') {
            steps {
                script {
                    def images = [
                        "prometheus",
                        "grafana",
                        "node-exporter",
                        "loki",
                        "promtail"
                    ]

                    for (image in images) {
                        // Docker Hub에서 최신 SHA Digest 가져오기
                        def dockerHubDigest = sh(script: """
                            curl -s https://hub.docker.com/v2/repositories/prom/${image}/tags/latest | jq -r '.images[0].digest'
                        """, returnStdout: true).trim()

                        // ECR에서 현재 저장된 SHA Digest 확인
                        def ecrDigest = sh(script: """
                            aws ecr describe-images --repository-name oops/monitoring --image-ids imageTag=${image} --region ${AWS_REGION} --query 'imageDetails[0].imageDigest' --output text 2>/dev/null
                        """, returnStdout: true).trim()

                        if (dockerHubDigest != ecrDigest) {
                            echo "🔄 새로운 이미지 발견: ${image}, Pull 및 Push 진행!"
                            sh """
                            docker pull prom/${image}:latest
                            docker tag prom/${image}:latest ${env.AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/oops/monitoring:${image}
                            docker push ${env.AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/oops/monitoring:${image}
                            """
                        } else {
                            echo "✅ 최신 이미지 유지됨: ${image}, Pull 및 Push 생략!"
                        }
                    }
                }
            }
        }
    }
}
